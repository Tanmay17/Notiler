#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#

localized.error={0}
parsing.wsdlNotDefaultNamespace=Standard-Namespace muss \\"{0}\\" sein
#
parsing.onlyOneOfElementOrTypeRequired=Nur eines der Attribute \\"element\\" oder \\"type\\" ist in Teil \\"{0}\\" zul\u00E4ssig
#
parsing.elementOrTypeRequired=Warnung: Teil {0} wird ignoriert, entweder das Attribut \"element\" oder das Attribut \"type\" ist in Teil \"{0}\" erforderlich
parsing.invalidElement=ung\u00FCltiges Element: \"{0}\" (in Namespace \"{1}\")
parsing.invalidAttributeValue=Ung\u00FCltiger Wert \"{1}\" f\u00FCr Attribut \"{0}\"
parsing.invalidExtensionElement=ung\u00FCltiges Erweiterungselement: \"{0}\" (in Namespace \"{1}\")
parsing.invalidWsdlElement=Ung\u00FCltiges WSDL-Element: "{0}"
parsing.requiredExtensibilityElement=unbekanntes erforderliches Erweiterungselement \"{0}\" (in Namespace \"{1}\")
parsing.tooManyElements=zu viele \"{0}\"-Elemente unter \"{1}\"-Element \"{2}\"
parsing.invalidOperationStyle=Vorgang \"{0}\" hat einen ung\u00FCltigen Stil
#
parsing.onlyOneTypesAllowed=Nur ein "types"-Element ist in "{0}" zul\u00E4ssig
#
parsing.onlyOneDocumentationAllowed=Nur ein "documentation"-Element ist in "{0}" zul\u00E4ssig
parsing.incorrectRootElement=Root-Element \"{2}\" (in Namespace \"{3}\"), Element \"{0}\" (in Namespace \"{1}\") gefunden
parsing.unknownImportedDocumentType=importiertes Dokument hat unbekannten Typ: {0}
#
parsing.unknownNamespacePrefix=nicht deklariertes Namespace-Pr\u00E4fix: \\"{0}\\"
parsing.invalidURI=ung\u00FCltiger URI: {0}
#
parsing.ioExceptionWithSystemId=Dokument in \"{0}\" konnte nicht geparst werden
#
parsing.ioException=Parsen nicht erfolgreich: {0}
#
parsing.saxExceptionWithSystemId=Ung\u00FCltige WSDL-Datei. Dokument in \"{0}\" konnte nicht geparst werden
#
parsing.saxException=Ung\u00FCltige WSDL-Datei. Parsing nicht erfolgreich: {0}
#
parsing.parserConfigException=Ung\u00FCltige WSDL-Datei. Parsing nicht erfolgreich: {0}
#
parsing.factoryConfigException=Ung\u00FCltige WSDL-Datei. Parsing nicht erfolgreich: {0}

#
parsing.missingRequiredAttribute=erforderliches Attribut \"{1}\" von Element \"{0}\" fehlt
parsing.invalidTag=Element \"{1}\" erwartet, \"{0}\" gefunden
#
parsing.invalidTagNS=Ung\u00FCltige WSDL in {4}: Element \\"{2}\\" (in Namespace \\"{3}\\") erwartet, Element \\"{0}\\" (in Namespace \\"{1}\\") gefunden
parsing.nonWhitespaceTextFound=unerwarteter Text ohne Leerstellen gefunden: \"{0}\"
#
parsing.elementExpected=unerwartetes Nicht-Element gefunden
#
entity.duplicate=doppelte Entity: \\"{0}\\"
#
entity.duplicateWithType=doppelte \"{0}\" Entity: \"{1}\"

entity.notFoundByID=ung\u00FCltige Entity-ID: \\"{0}\\"
entity.notFoundByQName={0} \"{1}\" nicht in WSDL gefunden: {2}
entity.notFound.portType=wsdl:portType \\"{0}\\" wird von wsdl:binding \\"{1}\\" referenziert, wird jedoch in der WSDL nicht gefunden
entity.notFound.binding=wsdl:binding \\"{0}\\" wird von wsdl:port \\"{1}\\" referenziert, wird jedoch in der WSDL nicht gefunden

#
validation.missingRequiredAttribute=erforderliches Attribut \"{0}\" von Element \"{1}\" fehlt
validation.missingRequiredProperty=erforderliche Eigenschaft \"{0}\" von Element \"{1}\" fehlt
validation.missingRequiredSubEntity=Erforderliche Sub-Entity \"{0}\" von Element \"{1}\" fehlt
#
validation.invalidElement=ung\u00FCltiges Element: \"{0}\"
#
#
validation.invalidSimpleTypeInElement=ung\u00FCltiges Element: \\"{1}\\", enth\u00E4lt benannten simpleType: \\"{0}\\"
validation.duplicatedElement=dupliziertes Element: \"{0}\"
validation.duplicatePartName=Ung\u00FCltige WSDL, doppelte Teile in einer wsdl:message sind nicht zul\u00E4ssig. \nwsdl:message {0} hat einen doppelten Teilnamen: \\"{1}\\"
#
validation.invalidSubEntity=Ung\u00FCltiges untergeordnetes Element \"{0}\" von Element \"{1}\"
#
validation.invalidAttribute=Ung\u00FCltiges Attribut \"{0}\" von Element \"{1}\"
validation.invalidAttributeValue=Ung\u00FCltiger Wert \"{1}\" f\u00FCr Attribut \"{0}\"
#
#
validation.exclusiveAttributes=exklusive Attribute: \"{0}\", \"{1}\"
validation.incorrectTargetNamespace=Ziel-Namespace ist nicht korrekt (erwartet: {1}, gefunden: {0})
#
#
validation.shouldNotHappen=interner Fehler ("{0}")
#
#
#
#
validation.ambiguousName=nicht eindeutiger Vorgangsname: \"{0}\"
#
#
#
validation.unsupportedUse.encoded="Verwendung von SOAP-Codierung wird nicht unterst\u00FCtzt. \nSOAP-Erweiterungselement in Zeile {0} in {1} enth\u00E4lt use=\\"encoded\\" "
#
warning.faultEmptyAction=leere Aktion in \"{0}\" {1}-Element von \"{2}\"-Vorgang wird ignoriert, stattdessen wird Standardwert verwendet
#
warning.inputOutputEmptyAction=leere Aktion in {0}-Element von \"{1}\"-Vorgang wird ignoriert, stattdessen wird Standardwert verwendet

#
warning.wsi.r2001=Keine mit WSI-BP konforme WSDL (R2001, R2002). wsdl:import darf nur WSDL-Dokumente importieren. Es wird versucht, \\"{0}\\" zu importieren
warning.wsi.r2002=Keine mit WSI-BP konforme WSDL (R2002). wsdl:import darf nicht f\u00FCr das Importieren eines XML-Schemas verwendet werden, das im WSDL-Dokument eingebettet ist. WSDL-Namespace {0} erwartet, {1} gefunden
warning.wsi.r2003=Keine mit WSI-BP konforme WSDL (R2003). xsd:import darf nur innerhalb von xsd:schema-Elementen verwendet werden.
warning.wsi.r2004=Keine mit WSI-BP konforme WSDL (R2001, R2004). xsd:import darf keine XML-Schemadefinitionen importieren, die inline in dem WSDL-Dokument eingebettet sind.

#
Parsing.ParseFailed = \tWSDL konnte nicht geparst werden.

Parsing.NotAWSDL=WSDL-Komponenten konnten nicht abgerufen werden, wahrscheinlich ist {0} keine g\u00FCltige WSDL-Datei.

AbstractReferenceFinderImpl.UnableToParse = \tParsen von "{0}" nicht m\u00F6glich: {1}

#
Parser.NotABindingFile = \tkeine externe Binding-Datei. Das Root-Element muss ''{''http://java.sun.com/xml/ns/jaxws''}''-Bindings sein, ist jedoch ''{''{0}''}''{1}


#
Internalizer.TwoVersionAttributes = \tSowohl jaxb:version als auch Version sind vorhanden
Internalizer.IncorrectVersion = \tJAXWS-Versionsattribut muss "2.0" sein

Internalizer.VersionNotPresent = \tJAXWS-Versionsattribut muss vorhanden sein

internalizer.targetNotAnElement= \tZielknoten ist kein Element
internalizer.targetNotFound= \tKein Ziel f\u00FCr wsdlLocation gefunden: {0}

Internalizer.IncorrectSchemaReference= \t"{0}" ist nicht Bestandteil dieser Kompilierung. Ist dies ein Fehler bei "{1}"?

internalizer.XPathEvaluationError = XPath-Fehler: {0}
internalizer.XPathEvaluatesToNoTarget = XPath-Auswertung von "{0}" ergibt einen leeren Zielknoten
internalizer.XPathEvaulatesToTooManyTargets = XPath-Auswertung von "{0}" ergibt zu viele ({1})-Zielknoten
internalizer.XPathEvaluatesToNonElement = XPath-Auswertung von "{0}" muss ein Element ergeben.
invalid.customization.namespace=Anpassung \\"{0}\\" wird ignoriert, weil sie keinen Namespace hat. Sie muss zu dem Anpassungs-Namespace geh\u00F6ren.

#
invalid.wsdl.with.dooc="Kein WSDL-Dokument: {0}, ergibt \"{1}\", Vorgang wird mit MEX wiederholt ..."
invalid.wsdl=Ung\u00FCltige WSDL {0}, {1} erwartet, {2} in (Zeile{3}) gefunden
#
try.with.mex= {0} \n\nVorgang wird mit MEX wiederholt ...
file.not.found={0} ist nicht erreichbar
parsing.unableToGetMetadata= {0}\n\n{1}
failed.noservice=failed.noservice=wsdl:service konnte in den angegebenen WSDLs nicht gefunden werden: \n\n{0} Mindestens eine WSDL mit mindestens einer Servicedefinition muss bereitgestellt werden.
